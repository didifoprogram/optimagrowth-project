version: '2.1'
services:
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    container_name: configserver
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "IMSYMMETRIC"
    networks:
      backend:
        aliases:
          - "configserver"
  
      #  keycloak:
      #    image: jboss/keycloak
      #    restart: always
      # environment:
      #  KEYCLOAK_USER: admin
      #  KEYCLOAK_PASSWORD: admin
      #    ports:
      #      - "8080:8080"
      #    networks:
      # backend:
      #  aliases:
      #    - "keycloak"
  
  kafkaserver:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper
    networks:
      backend:
        aliases:
          - "kafka"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      backend:
        aliases:
          - "zookeeper"

  database:
    image: postgres:latest
    container_name: postgres
    hostname: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      backend:
        aliases:
          - "database"

  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    container_name: eurekaserver
    ports:
      - "8070:8070"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  gatewayserver:
    image: ostock/gatewayserver:0.0.1-SNAPSHOT
    container_name: gateway
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway"

  licensingservice:
    image: ostock/licensing-service:0.0.1-SNAPSHOT
    container_name: licensingservice
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_started
      configserver:
        condition: service_started
    ports:
      - "8180:8080"
    networks:
      - backend

  organizationservice:
    image: ostock/organization-service:0.0.1-SNAPSHOT
    container_name: organiztionservice
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_started
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

networks:
  backend:
    driver: bridge
